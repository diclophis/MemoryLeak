display = Wang:new()

math.randomseed( os.time() )

--local bgGroup = display.newGroup()
--local topBg = display.newRect(bgGroup, 0, 0, 480, 180 )
--local bottomBg = display.newRect(bgGroup, 0, 180, 480, 160 )
--local pixel = display.newRect( -20, 160, 20, 20 )

local jumping = false
local jumpVel = 6
local gravity = 0.4
local offscreen = false

local direction = 1
local pixelTopY = 170
local pixelTopX = -20
local pixelBottomY = 310
--local pixelBottomX = display.viewableContentWidth + 30
local setupColors	= true
local tr, tg, tb, br, bg, bb

local jumpListener = function( event )
	jumping = true
	return true
end

local stopJumpOnCollisionWithGround = function()
	if (offscreen) or (pixel.y == pixelTopY or pixel.y == pixelBottomY) then
		jumping = false
		jumpVel = 6
	end
end

function mainLoop()
	if setupColors == true then
		setupColors = false
		tr = math.random(255)
		tg = math.random(255)
		tb = math.random(255)
		--topBg:setFillColor(tr, tg, tb)

		br = math.random(255)
		bg = math.random(255)
		bb = math.random(255)
		--bottomBg:setFillColor(br, bg, bb)
		--pixel:setFillColor(br, bg, bb)
	end
	
	if jumping == true then
		--pixel.y = pixel.y - jumpVel
		jumpVel = jumpVel - gravity
		stopJumpOnCollisionWithGround()
	end
	
	if direction == 1 then
		--pixel.x = pixel.x + 3
		--if pixel.x > display.viewableContentWidth + 30 then
		--	pixel:setFillColor(tr, tg, tb)
		--	pixel.y = pixelBottomY
		--	pixel.x = pixelBottomX
		--	direction = 0
		--	offscreen = true
		--end
	elseif direction == 0 then
		--pixel.x = pixel.x - 3
		--if pixel.x < -30 then
		--	setupColors = true
		--	pixel:setFillColor(br, bg, bb)
		--	direction = 1
		--	offscreen = true
		--	pixel.x = pixelTopX
		--	pixel.y = pixelTopY
		--end
	end
	if offscreen then
		stopJumpOnCollisionWithGround()
		offscreen = false
	end
  --io.write(".")
end

while true do
  mainLoop()
end
